#
# AXC001 CPU card for the AXS101.
#
# Contains: ARC770D, ARC EM6, ARC AS221BD (two ARC 600 cores, can be treated as
# a single core ARC 600).
#

# _CHIPNAME really should be same for all cores and be something like AXC001,
# however at the moment ARC OpenOCD will use chip name to decide whether it is
# ARC 600, ARC 700 or ARC EM. Therefore we need to set it each time for each
# core. This crutch can be removed after the way how OpenOCD distinguishes
# different ARCs will be fixed and CHIPNAME will be just a chip name.

# AXC001 contains 4 cores: two ARC 600's (united as AS221), EM6 and ARC 770D.
# Four JTAG combinations are possible, depending on configuration of TSEL
# jumpers:
# 1. All cores are in chain
# 2. Both ARC 600's are in
# 3. Only ARC EM is in
# 4. Only ARC 700 is in.
# Default is "all in". Caller may use HAS_[EM6|770|AS221] to override.

set _coreid 0
set _dbgbase [expr 0x00000000 | ($_coreid << 13)]

set _sram_addr 0x20000000
set _sram_size 0x20000

if { ![info exists HAS_EM6] } {
    set HAS_EM6 1
}
if { ![info exists HAS_770] } {
    set HAS_770 1
}
if { ![info exists HAS_AS221] } {
    set HAS_AS221 1
}

# For some reasons OpenOCD discovers JTAG TAPs in reverse order.

if { $HAS_770 } {
    # ARC 700 on ML 509: 0x200034b1
    # ARC 700 on AXC001: 0x201034b1
    set _CHIPNAME arc700
    set _TARGETNAME $_CHIPNAME.cpu
    jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -expected-id 0x200034b1 -expected-id 0x201034b1

    target create $_TARGETNAME arc32 -chain-position $_TARGETNAME
    $_TARGETNAME configure -coreid $_coreid
    $_TARGETNAME configure -dbgbase $_dbgbase
    $_TARGETNAME configure -work-area-phys $_sram_addr -work-area-size $_sram_size
    set _coreid [expr $_coreid + 1]
    set _dbgbase [expr 0x00000000 | ($_coreid << 13)]
}

if { $HAS_EM6 } {
    # EM SK 0x200444b1
    # SDP:EM6 0x200c44b1
    set _CHIPNAME arc-em
    set _TARGETNAME $_CHIPNAME.cpu
    jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -expected-id 0x200444b1 -expected-id 0x200c44b1

    target create $_TARGETNAME arc32 -chain-position $_TARGETNAME
    $_TARGETNAME configure -coreid $_coreid
    $_TARGETNAME configure -dbgbase $_dbgbase
    $_TARGETNAME configure -work-area-phys $_sram_addr -work-area-size $_sram_size
    set _coreid [expr $_coreid + 1]
    set _dbgbase [expr 0x00000000 | ($_coreid << 13)]
}

if { $HAS_AS221 } {
    set _CHIPNAME arc600

    set _TARGETNAME $_CHIPNAME.cpu2
    jtag newtap $_CHIPNAME cpu2 -irlen 4 -ircapture 0x1 -expected-id 0x200424b1 -expected-id 0x200824b1
    target create $_TARGETNAME arc32 -chain-position $_TARGETNAME \
	-coreid $_coreid -dbgbase $_dbgbase
    $_TARGETNAME configure -work-area-phys $_sram_addr -work-area-size $_sram_size
    set _coreid [expr $_coreid + 1]
    set _dbgbase [expr 0x00000000 | ($_coreid << 13)]

    set _TARGETNAME $_CHIPNAME.cpu1
    jtag newtap $_CHIPNAME cpu1 -irlen 4 -ircapture 0x1 -expected-id 0x200424b1 -expected-id 0x200824b1
    target create $_TARGETNAME arc32 -chain-position $_TARGETNAME \
	-coreid $_coreid -dbgbase $_dbgbase
    $_TARGETNAME configure -work-area-phys $_sram_addr -work-area-size $_sram_size
    set _coreid [expr $_coreid + 1]
    set _dbgbase [expr 0x00000000 | ($_coreid << 13)]
}
