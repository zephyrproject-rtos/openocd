#
# HAPS51 target system setup
#

if { [info exists CHIPNAME] } {
	set _CHIPNAME $CHIPNAME
} else {
	set _CHIPNAME arc700
}

if { [info exists DAP_TAPID] } {
	set _DAP_TAPID $DAP_TAPID
} else {
	set _DAP_TAPID 0x3BA00477
}

jtag newtap $_CHIPNAME dap -irlen 4 -ircapture 0x1 -irmask 0xf \
	-expected-id $_DAP_TAPID -disable
jtag configure $_CHIPNAME.dap -event tap-enable \
	"icepick_c_tapenable $_CHIPNAME.jrc 9"

jtag newtap $_CHIPNAME jrc -irlen 6 -ircapture 0x1 -irmask 0x3f \
	-expected-id $_JRC_TAPID -expected-id $_JRC_TAPID2

#
# GDB target: ARC700, using DAP
#
# The debugger can connect to either core of the A9, but currently
# not both simultaneously.  Change -coreid to 1 to connect to the
# second core.
#
set _TARGETNAME $_CHIPNAME.cpu

# APB DBGBASE reads 0x80040000, but this points to an empty ROM table.
# 0x80000000 is cpu0 coresight region
#
#
# CORTEX_A8_PADDRDBG_CPU_SHIFT 13
# 0x80000000 | (coreid << CORTEX_A8_PADDRDBG_CPU_SHIFT)

set _coreid 0
set _dbgbase [expr 0x80000000 | ($_coreid << 13)]
echo "Using dbgbase = [format 0x%x $_dbgbase]"

target create $_TARGETNAME arc_700 -chain-position $_CHIPNAME.dap \
  -coreid 0 -dbgbase $_dbgbase

# SRAM: 56KiB at 0x4030.0000
$_TARGETNAME configure -work-area-phys 0x80000000 -work-area-size 0x10000000

# Once the JRC is up, enable our TAPs
jtag configure $_CHIPNAME.jrc -event setup "
	jtag tapenable $_CHIPNAME.dap
	jtag tapenable $_CHIPNAME.m30_dap
	jtag tapenable $_CHIPNAME.m31_dap
"

# Assume SRST is unavailable (e.g. TI-14 JTAG), so we must assert reset
# ourselves using PRM_RSTCTRL.  1 is a warm reset, 2 a cold reset.
set PRM_RSTCTRL 0x4A307B00
$_TARGETNAME configure -event reset-assert "$_TARGETNAME mww phys $PRM_RSTCTRL 0x1"
$_CHIPNAME.m30 configure -event reset-assert { }
$_CHIPNAME.m31 configure -event reset-assert { }

# Soft breakpoints don't currently work due to broken cache handling
gdb_breakpoint_override hard

